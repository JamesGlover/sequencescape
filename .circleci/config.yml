# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
defaults: &defaults
  docker:
    # specify the version you desire here
    - image: circleci/ruby:2.4.1-node-browsers
      environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLE_WITHOUT: 'warehouse deployment'
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: circleci
          DATABASE_URL: 'mysql2://root@127.0.0.1:3306'
    - image: tkuchiki/delayed-mysql
      environment:
        BUNDLE_JOBS: 4
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        BUNDLE_WITHOUT: 'warehouse deployment'
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
        MYSQL_ROOT_PASSWORD: ''
        MYSQL_DATABASE: circleci
        DATABASE_URL: 'mysql2://root@127.0.0.1:3306'

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

  working_directory: ~/repo
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run:
         name:  Download cc-test-reporter
         command: |
           mkdir -p tmp/
           curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
           chmod +x ./tmp/cc-test-reporter

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - tmp/cc-test-reporter
            - vendor/bundle

  run-specs:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: echo $DATABASE_URL
      - run: bundle exec bin/setup

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  run-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: bundle exec bin/setup

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rake test
      # collect reports

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  run-cukes:
    <<: *defaults
    environment:
      RAILS_ENV: cucumber
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: RAILS_ENV=cucumber bundle exec bin/setup

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rake knapsack:cucumber

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  run-rubocop:
    <<: *defaults
    environment:
      RAILS_ENV: cucumber
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rubocop

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2

  commit:
    jobs:
      - build
      - run-specs:
          requires:
            - build
      - run-tests:
          requires:
            - build
      - run-cukes:
          requires:
            - build
      - run-rubocop:
          requires:
            - build
