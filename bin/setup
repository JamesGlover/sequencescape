#!/usr/bin/env ruby
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.
  puts '== Checking basics'
  expected_version = (/[\d.]+/.match(File.read('.ruby-version')))[0]
  unless RUBY_VERSION == expected_version
    puts "Expected ruby #{expected_version} got #{RUBY_VERSION}"
    puts "Please install ruby #{expected_version}"
    puts "You may want to install a ruby version manager"
    puts "https://github.com/rbenv/rbenv"
  end

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'

  # Check to see if we can install the oracle gems
  unless ENV['DYLD_LIBRARY_PATH'] || ENV['DYLD_FALLBACK_LIBRARY_PATH'] || ENV['OCI_DIR']
    puts "No Oracle configuration detected disabling associated gems"
    system!('bundle config without warehouse')
  end

  system('bundle check') || system!('bundle install --jobs 4 --retry 3')

  # Install JavaScript dependencies if using Yarn
  system('bin/yarn')

  puts "\n== Copying example files =="
  [
    'config/aker.yml',
  ].each do |base|
    cp "#{base}.example", base unless File.exist?(base)
  end

  puts "\n== Preparing database =="
  system! 'bin/rails db:setup'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end
